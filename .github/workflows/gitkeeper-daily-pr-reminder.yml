name: GitKeeper ‚Äì Daily Pending PR Reminder

on:
  schedule:
    - cron: '30 9 * * *'  # Ejecuta todos los d√≠as a las 09:30 UTC

jobs:
  dailyReminder:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Send daily PR reminders
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üìö Cargando mapa de revisores..."
          MAP_FILE=".github/slack-reviewer-map.json"

          echo "üîç Buscando PRs abiertas..."
          PRS=$(gh pr list --state open --json number,title,url,createdAt,reviewRequests,reviews,author -q '.[]')

          declare -A reminders

          echo "$PRS" | jq -c '.[]' | while read -r pr; do
            number=$(echo $pr | jq -r '.number')
            title=$(echo $pr | jq -r '.title')
            url=$(echo $pr | jq -r '.url')
            created=$(echo $pr | jq -r '.createdAt')
            reviewers=$(echo $pr | jq -r '.reviewRequests[].login')
            approvals=$(echo $pr | jq -r '.reviews[] | select(.state == "APPROVED") | .author.login' | sort -u)

            for reviewer in $reviewers; do
              # Si el revisor ya aprob√≥, lo ignoramos
              if echo "$approvals" | grep -q "^$reviewer$"; then
                continue
              fi

              # Buscar Slack ID
              slack_id=$(jq -r --arg user "$reviewer" '.[$user]' "$MAP_FILE")

              if [ "$slack_id" == "null" ] || [ -z "$slack_id" ]; then
                echo "‚ö†Ô∏è No se encontr√≥ Slack ID para $reviewer"
                continue
              fi

              # Agregar mensaje para el revisor
              line="‚Ä¢ <$url|#${number}> $title ‚Äì open since ${created:0:10}"
              reminders[$slack_id]="${reminders[$slack_id]}$line\n"
            done
          done

          # Enviar recordatorios
          for slack_id in "${!reminders[@]}"; do
            message="üìå *You have pending PRs to review:*\n${reminders[$slack_id]}"
            echo "üì® Enviando mensaje a $slack_id..."
            curl -s -X POST https://slack.com/api/chat.postMessage \
              -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
              -H "Content-type: application/json" \
              --data "{
                \"channel\": \"$slack_id\",
                \"text\": \"$message\"
              }"
          done
